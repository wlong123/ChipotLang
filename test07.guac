<< swap two refs with odd number of threads to show (un)lockall primitives >>
def x = ref 0 in
def y = ref 1 in
def swap = 
  fun z =>
    lockall [x, y];
    def tmp = !x in
    x := !y;
    y := tmp;
    unlockall [x, y]
in
def loop = 
  fun n =>
    if (n = 0) then none
    else
    thread (swap (none));
    loop (n - 1)
in
loop (3);
joinall;
print (!x);
print (!y)