<< Variation of the reader-writer problem >>
def maxlen = 5 in
def len = ref 0 in
def buffer = ref [] in
def w1 = ref false in
def w2 = ref false in
def read = fun n => 
    if !n then none 
    else
      lock (len);
      (if !len > 0
      then (
          lock (buffer);
          print ("READ"); 
          print (hd (!buffer)); 
          buffer := (tl (!buffer));
          len := !len - 1;
          n := true;
          unlockall [buffer, len]
          )
      else 
          unlock (len);
          read (n)
      )
in
def write = fun n => fun n2 =>
    if !n then none 
    else
      lock (len);
      (if !len < maxlen
      then (
          lock (buffer);
          buffer := (n2 :: !buffer);
          print ("WRITE");
          print (1); 
          len := !len + 1;
          n := true;
          unlockall [buffer, len]
          )
      else 
          unlock (len);
          write (n)
      )
in
thread (read(ref false));
thread (read(ref false));
thread (read(ref false));
thread (read(ref false));
thread (read(ref false));
thread (write (ref false) (1));
thread (write (ref false) (2));
thread (write (ref false) (3));
thread (write (ref false) (4));
thread (write (ref false) (5));
joinall;
print(!buffer)

